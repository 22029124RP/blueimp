{"version":3,"sources":["md5.js"],"names":[],"mappings":"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","file":"md5.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.md5 = factory());\n}(this, (function () { 'use strict';\n\n/*\n * JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nconst safeAdd = (x, y) => {\n  let lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  return (((x >> 16) + (y >> 16) + (lsw >> 16)) << 16) | (lsw & 0xFFFF)\n};\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nconst bitRotateLeft = (num, cnt) => (num << cnt) | (num >>> (32 - cnt));\n\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\nconst md5cmn = (q, a, b, x, s, t) => safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\nconst md5ff = (a, b, c, d, x, s, t) => md5cmn((b & c) | ((~b) & d), a, b, x, s, t);\nconst md5gg = (a, b, c, d, x, s, t) => md5cmn((b & d) | (c & (~d)), a, b, x, s, t);\nconst md5hh = (a, b, c, d, x, s, t) => md5cmn(b ^ c ^ d, a, b, x, s, t);\nconst md5ii = (a, b, c, d, x, s, t) => md5cmn(c ^ (b | (~d)), a, b, x, s, t);\n\nconst firstChunk = (chunks, x, i) => {\n    let [a, b, c, d] = chunks;\n    a = md5ff(a, b, c, d, x[i + 0], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n    return [a, b, c, d]\n  };\nconst secondChunk = (chunks, x, i) => {\n    let [a, b, c, d] = chunks;\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n    return [a, b, c, d]\n  };\nconst thirdChunk = (chunks, x, i) => {\n    let [a, b, c, d] = chunks;\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n    return [a, b, c, d]\n  };\nconst fourthChunk = (chunks, x, i) => {\n    let [a, b, c, d] = chunks;\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    return [a, b, c, d]\n  };\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\nconst binlMD5 = (x, len) => {\n  /* append padding */\n  x[len >> 5] |= 0x80 << (len % 32);\n  x[(((len + 64) >>> 9) << 4) + 14] = len;\n  let commands = [firstChunk, secondChunk, thirdChunk, fourthChunk],\n    initialChunks = [\n      1732584193,\n      -271733879,\n      -1732584194,\n      271733878\n    ];\n  return Array.from({length: Math.floor(x.length / 16) + 1}, (v, i) => i * 16)\n    .reduce((chunks, i) => commands\n      .reduce((newChunks, apply) => apply(newChunks, x, i), chunks.slice())\n      .map((chunk, index) => safeAdd(chunk, chunks[index])), initialChunks)\n\n};\n\n/*\n * Convert an array of little-endian words to a string\n */\nconst binl2rstr = input => Array(input.length * 4).fill(8).reduce((output, k, i) => output + String.fromCharCode((input[(i * k) >> 5] >>> ((i * k) % 32)) & 0xFF), '');\n\n/*\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\nconst rstr2binl = input => Array.from(input).map(i => i.charCodeAt(0)).reduce((output, cc, i) => {\n  let resp = output.slice();\n  resp[(i * 8) >> 5] |= (cc & 0xFF) << ((i * 8) % 32);\n  return resp\n}, []);\n\n/*\n * Calculate the MD5 of a raw string\n */\nconst rstrMD5 = string => binl2rstr(binlMD5(rstr2binl(string), string.length * 8));\n/*\n * Calculate the HMAC-MD5, of a key and some data (raw strings)\n */\nconst strHMACMD5 = (key, data) => {\n  let bkey = rstr2binl(key),\n    ipad = Array(16).fill(undefined ^ 0x36363636),\n    opad = Array(16).fill(undefined ^ 0x5C5C5C5C);\n\n  if (bkey.length > 16) {\n    bkey = binlMD5(bkey, key.length * 8);\n  }\n\n  bkey.forEach((k, i) => {\n    ipad[i] = k ^ 0x36363636;\n    opad[i] = k ^ 0x5C5C5C5C;\n  });\n\n  return binl2rstr(binlMD5(opad.concat(binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8)), 512 + 128))\n};\n\n/*\n * Convert a raw string to a hex string\n */\nconst rstr2hex = input => {\n  const hexTab = (pos) => '0123456789abcdef'.charAt(pos);\n  return Array.from(input).map(c => c.charCodeAt(0)).reduce((output, x, i) => output + hexTab((x >>> 4) & 0x0F) + hexTab(x & 0x0F), '')\n};\n\n/*\n * Encode a string as utf-8\n */\n\nconst str2rstrUTF8 = unicodeString => {\n  if (typeof unicodeString !== 'string') throw new TypeError('parameter ‘unicodeString’ is not a string');\n  const cc = c => c.charCodeAt(0);\n  return unicodeString\n    .replace(/[\\u0080-\\u07ff]/g,  // U+0080 - U+07FF => 2 bytes 110yyyyy, 10zzzzzz\n      c => String.fromCharCode(0xc0 | cc(c) >> 6, 0x80 | cc(c) & 0x3f))\n    .replace(/[\\u0800-\\uffff]/g,  // U+0800 - U+FFFF => 3 bytes 1110xxxx, 10yyyyyy, 10zzzzzz\n      c => String.fromCharCode(0xe0 | cc(c) >> 12, 0x80 | cc(c) >> 6 & 0x3F, 0x80 | cc(c) & 0x3f))\n};\n\n/*\n * Take string arguments and return either raw or hex encoded strings\n */\nconst rawMD5 = s => rstrMD5(str2rstrUTF8(s));\n\nconst hexMD5 = s => rstr2hex(rawMD5(s));\n\nconst rawHMACMD5 = (k, d) => strHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\n\nconst hexHMACMD5 = (k, d) => rstr2hex(rawHMACMD5(k, d));\n\n\nvar md5 = (string, key, raw) => {\n  if (!key) {\n    if (!raw) {\n      return hexMD5(string)\n    }\n    return rawMD5(string)\n  }\n  if (!raw) {\n    return hexHMACMD5(key, string)\n  }\n  return rawHMACMD5(key, string)\n};\n\nreturn md5;\n\n})));\n"]}